# Routes
# This file defines all application routes (Higher priority routes first)
# ~~~~

GET     /                                             controllers.ThrallController.index
GET     /upsertProject                                controllers.ThrallController.upsertProjectPage(imageId: Option[String])

GET     /migrationFailuresOverview                    controllers.ThrallController.migrationFailuresOverview()

GET     /migrationFailures                            controllers.ThrallController.migrationFailures(filter: String, page: Option[Int])
GET     /migrationSkippedImages                       controllers.ThrallController.migrationSkippedImages(page: Option[Int])
+nocsrf
POST    /cleanUpImageResources                        controllers.ThrallController.cleanUpImageResources

+nocsrf
POST    /migrationFailures/reattempt                  controllers.ThrallController.reattemptMigrationFailures(filter: String, page: Int)

+nocsrf
POST    /startMigration                               controllers.ThrallController.startMigration
+nocsrf
POST    /pauseMigration                               controllers.ThrallController.pauseMigration
+nocsrf
POST    /resumeMigration                              controllers.ThrallController.resumeMigration
+nocsrf
POST    /migrate                                      controllers.ThrallController.migrateSingleImage
POST    /upsertProject                                controllers.ThrallController.upsertFromProjectionSingleImage
+nocsrf
POST    /completeMigration                            controllers.ThrallController.completeMigration
+nocsrf
POST    /previewMigrationCompletion                   controllers.ThrallController.previewMigrationCompletion
+nocsrf
POST    /unPreviewMigrationCompletion                 controllers.ThrallController.unPreviewMigrationCompletion

# Management
GET     /management/healthcheck                       controllers.HealthCheck.healthCheck
GET     /management/manifest                          com.gu.mediaservice.lib.management.Management.manifest
GET     /management/innerServiceStatusCheck           com.gu.mediaservice.lib.management.InnerServiceStatusCheckController.statusCheck(depth: Int)
GET     /management/whoAmI                            com.gu.mediaservice.lib.management.InnerServiceStatusCheckController.whoAmI(depth: Int)

GET     /assets/*file                                 controllers.Assets.versioned(path="/public", file: Asset)

# Shoo robots away
GET     /robots.txt                                   com.gu.mediaservice.lib.management.Management.disallowRobots
